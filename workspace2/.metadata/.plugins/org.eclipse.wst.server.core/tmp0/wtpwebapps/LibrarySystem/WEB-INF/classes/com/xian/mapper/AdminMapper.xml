<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xian.mapper.AdminMapper">
	<select id="getBorrows" parameterType="borrows" resultType="borrows">
		SELECT
		u.`uname`,k.`bname`,k.`author`,k.`birth`,k.`edition`,b.`startTime`,b.`status`
		, k.`sid` ,s.`sname`,b.`id`,k.`number` FROM borrows b LEFT JOIN users
		u ON b.`uid`=u.`id`
		LEFT JOIN books k ON b.`bid`=k.`id`
		LEFT JOIN sorts s ON s.`id`=k.`sid`
		<where>
			<if test="uname!=null and uname!=''">
				and u.`uname` like "%${uname}%"
			</if>
			<if test="sid!=null and sid!=''">
				and k.`sid`=#{sid}
			</if>
		</where>
		ORDER BY b.`startTime`
		limit #{start}, 8
	</select>

	<!--查总记录 -->
	<select id="getCount" parameterType="borrows" resultType="int">
		SELECT count(b.id)
		FROM borrows b LEFT JOIN users u ON b.`uid`=u.`id`
		LEFT JOIN books k ON b.`bid`=k.`id`
		LEFT JOIN sorts s ON s.`id`=k.`sid`
		<where>
			<if test="uname!=null and uname!=''">
				and u.`uname` like "%${uname}%"
			</if>
			<if test="sid!=null and sid!=''">
				and k.`sid`=#{sid}
			</if>
		</where>
		ORDER BY b.`startTime`
	</select>
	
	<select id="getCount2" parameterType="borrows" resultType="int">
		SELECT count(b.id)
		FROM borrows s INNER JOIN books k ON s.`bid`=k.`id`
		INNER JOIN users u ON s.`uid`=u.`id`
		INNER JOIN backs b ON s.`id`=b.`brid`
	</select>

	<update id="updateBorrows" parameterType="int">
		UPDATE borrows SET
		STATUS=1 WHERE id=#{id}
	</update>

	<update id="notAllowBorrows" parameterType="int">
		UPDATE borrows SET
		STATUS=2 WHERE id=#{id}
	</update>

	<insert id="inserBackBooks" parameterType="int">
		INSERT INTO `backs`
		(
		`brid`,
		`status`)
		VALUES (
		#{id},
		0)
	</insert>

	<select id="getBackBooks" parameterType="borrows" resultType="borrows">
		SELECT
		u.`uname`,k.`bname`,k.`author`,k.`birth`,k.`edition`,b.`id`,b.`status`
		as backStatus FROM borrows s INNER JOIN books k ON s.`bid`=k.`id`
		INNER JOIN users u ON s.`uid`=u.`id`
		INNER JOIN backs b ON s.`id`=b.`brid`
		limit #{start}, 8
	</select>

	<update id="allowBackBook" parameterType="int">
		UPDATE
		`library`.`backs`
		SET
		`status` = 2
		WHERE `id` = #{id}
	</update>

	<!-- 申请预定sql -->
	<select id="getAllReserve" resultType="reserve">
		SELECT
		u.`uname`,b.`bname`,b.`author`,b.`birth`,b.`edition`,b.`number`,s.`id`,s.`startTime`
		FROM reserves s INNER JOIN books b ON s.`bkid`=b.`id` INNER JOIN users
		u ON s.`uid`=u.`id` WHERE s.`status`=0 ORDER BY s.`startTime`
	</select>

	<update id="updateReserveBook" parameterType="int">
		UPDATE `reserves`
		SET
		`status` = 1
		WHERE `id` = #{id};
	</update>

	<select id="getAdmin" parameterType="users" resultType="admin">
		SELECT
		`id`,
		`uname`,
		`code`,
		`password`
		FROM `admins` WHERE `code`=#{code} AND `password`=#{password}
	</select>

	<update id="notAllowReserveBook" parameterType="int">
		UPDATE `reserves`
		SET
		`status` =2
		WHERE `id` = #{id};
	</update>

	<select id="selectBorrowsId" parameterType="int" resultType="int">
		SELECT
		`brid`
		FROM `backs`
		WHERE id=#{id}
	</select>

	<select id="selectBooksId" parameterType="int" resultType="int">
		SELECT
		`bid`
		FROM `borrows` WHERE id=#{id}
	</select>

	<update id="updateBooks" parameterType="int">
		UPDATE `books`
		SET
		`number` = number+1
		WHERE `id` = #{id}
	</update>

	<update id="descBooks" parameterType="int">
		UPDATE `books`
		SET
		`number` = number-1
		WHERE `id` = #{id}
	</update>

	<update id="updateBorrowsTime" parameterType="borrows">
		update `borrows`
		set
		`endTime` = #{endTime}
		where `id` = #{id};
	</update>

	<update id="updateReserveTime" parameterType="reserve">
		UPDATE `reserves`
		SET
		`endTime` = #{endTime}
		WHERE `id` = #{id}
	</update>
	<!-- <sql id="customer"> <where> <if test="custName!=null and custName!=''"> 
		and c.`cust_name`LIKE "%${custName}%" </if> <if test="custSource!=null and 
		custSource!=''"> and c.`cust_source`= #{custSource} </if> <if test="custIndustry 
		!= null and custIndustry != ''"> AND c.`cust_industry` = #{custIndustry} 
		</if> <if test="custLevel !=null and custLevel !=''"> and c.`cust_level`= 
		#{custLevel } </if> </where> </sql> <select id="getBaseDict" parameterType="String" 
		resultType="basedict"> SELECT `dict_id`, `dict_type_code`, `dict_type_name`, 
		`dict_item_name`, `dict_item_code`, `dict_sort`, `dict_enable`, `dict_memo` 
		FROM `base_dict` WHERE `dict_type_code` = #{id}; </select> <select id="getCustomer" 
		parameterType="queryvo" resultType="customer"> SELECT `cust_id`, `cust_name`, 
		s.`dict_item_name` cust_source, i.`dict_item_name` cust_industry, l.`dict_item_name` 
		cust_level, `cust_phone`, `cust_mobile`, `cust_zipcode` FROM `customer` c 
		LEFT JOIN `base_dict` s ON c.`cust_source` = s.`dict_id` LEFT JOIN `base_dict` 
		i ON c.`cust_industry` = i.`dict_id` LEFT JOIN `base_dict` l ON c.`cust_level` 
		= l.`dict_id` <include refid="customer"/> LIMIT #{start}, #{rows}; </select> 
		<select id="getCount" parameterType="queryvo" resultType="int"> SELECT count(1) 
		FROM `customer` c LEFT JOIN `base_dict` s ON c.`cust_source` = s.`dict_id` 
		LEFT JOIN `base_dict` i ON c.`cust_industry` = i.`dict_id` LEFT JOIN `base_dict` 
		l ON c.`cust_level` = l.`dict_id` <include refid="customer"/> </select> <select 
		id="editCustomer" parameterType="int" resultType="customer"> SELECT `cust_id`, 
		`cust_name`, `cust_user_id`, `cust_create_id`, `cust_source`, `cust_industry`, 
		`cust_level`, `cust_linkman`, `cust_phone`, `cust_mobile`, `cust_zipcode`, 
		`cust_address`, `cust_createtime` FROM `customer` WHERE `cust_id`= #{id} 
		</select> <update id="updateCustomer" parameterType="customer" > UPDATE `customer` 
		<set> <if test="cust_name!=null and cust_name!=''"> `cust_name` = #{cust_name}, 
		</if> <if test="cust_source!=null and cust_source!=''"> `cust_source` = #{cust_source}, 
		</if> <if test="cust_industry!=null and cust_industry!=''"> `cust_industry` 
		= #{cust_industry}, </if> <if test="cust_level!=null and cust_level!=''"> 
		`cust_level` = #{cust_level}, </if> <if test="cust_linkman!=null and cust_linkman!=''"> 
		`cust_linkman` = #{cust_linkman}, </if> <if test="cust_phone!=null and cust_phone!=''"> 
		`cust_phone` = #{cust_phone}, </if> <if test="cust_mobile!=null and cust_mobile!=''"> 
		`cust_mobile` = #{cust_mobile}, </if> <if test="cust_zipcode!=null and cust_zipcode!=''"> 
		`cust_zipcode` = #{cust_zipcode}, </if> <if test="cust_address!=null and 
		cust_address!=''"> `cust_address` = #{cust_address}, </if> </set> WHERE `cust_id` 
		= #{cust_id} </update> -->
</mapper>
